@page "/shoes/GetShoe"
@inject ILocalStorageService LocalStorageService

<h3>Get Shoe</h3>
<SfTextBox Placeholder='Id' Value="@shoeId" @oninput="UpdateShoeId"></SfTextBox>
<p>Shoe name: @shoeNameToDisplay</p>
<p>Shoe description: @shoeDescToDisplay</p>
<p>Shoe size: @shoeSizeToDisplay</p>
<button class="btn btn-primary" @onclick="GetShoeFromApi">Get Shoe</button>

@code {
	//IMyApiService _shoeApiClient = new MyApiService();
	private readonly HttpClient _httpClient = new HttpClient();
	private const string base_url = "http://localhost:5093";
	private const string shoeslist_endpoint = "api/Shoe/GetShoes";
	private const string shoe_endpoint = "api/Shoe/GetShoe/{0}";
	private const string delete_endpoint = "api/Shoe/DeleteShoe/{0}";
	private const string add_endpoint = "api/Shoe/newShoe";
	private const string update_endpoint = "api/Shoe/UpdateShoe/{0}";

	private string shoeNameToDisplay = "";
	private string shoeDescToDisplay = "";
	private string shoeSizeToDisplay = "";
	public string shoeId { get; set; } = "";

	private void UpdateShoeId(ChangeEventArgs args)
	{
		shoeId = args.Value.ToString();
	}

	public async Task GetShoeFromApi()
	{
		var uri = base_url + "/" + string.Format(shoe_endpoint, shoeId);

		var token = await LocalStorageService.GetItemAsStringAsync("authToken");
        token = token.Replace("\"", "");
		_httpClient.DefaultRequestHeaders.Add("Authorization", string.Format("Bearer {0}", token));

		var response = await _httpClient.GetAsync(uri); //"http://localhost:5093/api/Shoe/GetShoe/1"
		var jsonResponse = await response.Content.ReadAsStringAsync();
		var responseObj = JsonConvert.DeserializeObject<JObject>(jsonResponse);
		bool success = responseObj.Value<bool>("success");
		if (success) //&& responseObj.Value<string>("data") != null
		{
			var shoeData = responseObj["data"].ToObject<Shoe>();
			shoeNameToDisplay = shoeData.Name;
			shoeDescToDisplay = shoeData.Description;
			shoeSizeToDisplay = shoeData.ShoeSize.ToString();
		}
		else
		{
			shoeNameToDisplay = "No shoe found";
			shoeDescToDisplay = "No shoe found";
			shoeSizeToDisplay = "No shoe found";
		}
	}
}
